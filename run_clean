#!/usr/bin/env python
"""
A script that takes a set of directories and file numbers and cleans data appropriately
"""

import sys
import numpy as np
# This includes an AO Instrument called "aoinst"
import pypoise
import nirc2
import pdb
import os

#Create a pypoise instance with a nirc2 AO instrument
pp = pypoise.PYPOISE(nirc2.NIRC2())

do_we_dither = sys.argv[1]
pp.aoinst.rdir = sys.argv[2] #'/Users/mireland/tel/nirc2/redux/130717/'
pp.aoinst.ddir = sys.argv[3] #'/Users/mireland/data/nirc2/130717/n'
pp.aoinst.cdir = sys.argv[4] #'./'
num_cubes = (len(sys.argv) - 5)//2
fstart = sys.argv[5:5+num_cubes]
nfs    = sys.argv[5+num_cubes:5+2*num_cubes]

if (not os.path.exists(pp.aoinst.cdir + "CLEAN_COMPLETE")):
    fnums = [int(sys.argv[5+i]) + np.arange(int(sys.argv[5+num_cubes+i])) for i in range(0,num_cubes)]
    extn = '.fits'
    for j in range(len(fnums)):
        files = [('n{0:04d}' + extn).format(i) for i in fnums[j]]
        cube_file = 'cube' + str(fnums[j][0]) + '.fits'
        manual_click=False
        destripe=True
        if (do_we_dither.find('s') >= 0):
            destripe=False
        if (do_we_dither.find('m') >= 0):
            manual_click=True
        if (do_we_dither.find('d') >= 0):
            cube = pp.aoinst.clean_dithered(files, out_file=cube_file, manual_click=manual_click, destripe=destripe)
        else:
            cube = pp.aoinst.clean_no_dither(files, out_file=cube_file, manual_click=manual_click, destripe=destripe)
        
with open(pp.aoinst.cdir + "CLEAN_COMPLETE","w+") as f:
    f.close()
